type Query {
  node(id: ID!): Node
  viewer: User

  """Loads remote stats, with simulated delay"""
  remoteStats(simulateDelay: Int = 100): RemoteStats
}

interface Node {
  id: ID!
}

type User implements Node {
  id: ID!
  name: String

  """Loads remote profile, with simulated delay"""
  remoteProfile(simulateDelay: Int = 100): UserRemoteProfile
  friends: [User]
}

type UserRemoteProfile {
  data: String
  errorField: String
  testArg(testArg: Int!): Int
}

type RemoteStats {
  data: String
  testArg(testArg: Int!): Int
  errorField: String
}
